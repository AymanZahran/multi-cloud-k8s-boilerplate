apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: argo-image-updater
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/version: v0.12.2
    helm.sh/chart: argocd-image-updater-0.9.1
  name: argo-image-updater-argocd-image-updater
  namespace: argo-image-updater
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: argo-image-updater
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/version: v0.12.2
    helm.sh/chart: argocd-image-updater-0.9.1
  name: argocd-image-updater-ssh-config
  namespace: argo-image-updater
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: argo-image-updater
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/version: v0.12.2
    helm.sh/chart: argocd-image-updater-0.9.1
  name: argocd-image-updater-config
  namespace: argo-image-updater
data:
  argocd.grpc_web: "true"
  argocd.insecure: "false"
  argocd.plaintext: "false"
  kube.events: "false"
  log.level: info
  registries.conf: ""
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: argo-image-updater
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/version: v0.12.2
    helm.sh/chart: argocd-image-updater-0.9.1
  name: argo-image-updater-argocd-image-updater
  namespace: argo-image-updater
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - argoproj.io
    resources:
      - applications
    verbs:
      - get
      - list
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: argo-image-updater
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/version: v0.12.2
    helm.sh/chart: argocd-image-updater-0.9.1
  name: argo-image-updater-argocd-image-updater
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-image-updater-argocd-image-updater
subjects:
  - kind: ServiceAccount
    name: argo-image-updater-argocd-image-updater
    namespace: argo-image-updater
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: argo-image-updater
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/version: v0.12.2
    helm.sh/chart: argocd-image-updater-0.9.1
  name: argo-image-updater-argocd-image-updater
  namespace: argo-image-updater
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: argo-image-updater
      app.kubernetes.io/name: argocd-image-updater
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config: 72ae6373bcc7fb0abb18c290946e6c9566e390ae44a4070cfacbc89c94f544ce
      labels:
        app.kubernetes.io/instance: argo-image-updater
        app.kubernetes.io/name: argocd-image-updater
    spec:
      containers:
        - command:
            - /usr/local/bin/argocd-image-updater
            - run
          env:
            - name: APPLICATIONS_API
              valueFrom:
                configMapKeyRef:
                  key: applications_api
                  name: argocd-image-updater-config
                  optional: true
            - name: ARGOCD_GRPC_WEB
              valueFrom:
                configMapKeyRef:
                  key: argocd.grpc_web
                  name: argocd-image-updater-config
                  optional: true
            - name: ARGOCD_SERVER
              valueFrom:
                configMapKeyRef:
                  key: argocd.server_addr
                  name: argocd-image-updater-config
                  optional: true
            - name: ARGOCD_INSECURE
              valueFrom:
                configMapKeyRef:
                  key: argocd.insecure
                  name: argocd-image-updater-config
                  optional: true
            - name: ARGOCD_PLAINTEXT
              valueFrom:
                configMapKeyRef:
                  key: argocd.plaintext
                  name: argocd-image-updater-config
                  optional: true
            - name: ARGOCD_TOKEN
              valueFrom:
                secretKeyRef:
                  key: argocd.token
                  name: argocd-image-updater-secret
                  optional: true
            - name: IMAGE_UPDATER_LOGLEVEL
              valueFrom:
                configMapKeyRef:
                  key: log.level
                  name: argocd-image-updater-config
                  optional: true
            - name: GIT_COMMIT_USER
              valueFrom:
                configMapKeyRef:
                  key: git.user
                  name: argocd-image-updater-config
                  optional: true
            - name: GIT_COMMIT_EMAIL
              valueFrom:
                configMapKeyRef:
                  key: git.email
                  name: argocd-image-updater-config
                  optional: true
            - name: IMAGE_UPDATER_KUBE_EVENTS
              valueFrom:
                configMapKeyRef:
                  key: kube.events
                  name: argocd-image-updater-config
                  optional: true
          image: quay.io/argoprojlabs/argocd-image-updater:v0.12.2
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 30
          name: argocd-image-updater
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 30
          resources: {}
          securityContext: {}
          volumeMounts:
            - mountPath: /app/config
              name: image-updater-conf
            - mountPath: /tmp
              name: tmp-dir
            - mountPath: /app/config/ssh
              name: ssh-known-hosts
            - mountPath: /app/.ssh
              name: ssh-config
      securityContext: {}
      serviceAccountName: argo-image-updater-argocd-image-updater
      volumes:
        - configMap:
            items:
              - key: registries.conf
                path: registries.conf
              - key: git.commit-message-template
                path: commit.template
            name: argocd-image-updater-config
            optional: true
          name: image-updater-conf
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            name: argocd-ssh-known-hosts-cm
            optional: true
          name: ssh-known-hosts
        - configMap:
            name: argocd-image-updater-ssh-config
            optional: true
          name: ssh-config
