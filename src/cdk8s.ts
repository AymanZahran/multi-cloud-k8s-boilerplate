import { App } from "cdk8s";
import { ArgoCd } from "./cdk8s/argoCd";
import { ArgoImageUpdater } from "./cdk8s/argoImageUpdater";
import { ArgoNotifications } from "./cdk8s/argoNotifications";
import { ArgoRollouts } from "./cdk8s/argoRollouts";
import { ArgoWorkflows } from "./cdk8s/argoWorkflows";
// import { CertManager } from "./cdk8s/certManager";
import { ClusterAutoscaler } from "./cdk8s/clusterAutoscaler";
import { Consul } from "./cdk8s/consul";
import { CrossPlane } from "./cdk8s/crossPlane";
import { KubeStateMetrics } from "./cdk8s/kubeStateMetrics";
import { MetricsServer } from "./cdk8s/metricsServer";
import { Prometheus } from "./cdk8s/prometheus";
import { SecretStoreDriver } from "./cdk8s/secretStoreDriver";
import { Tekton } from "./cdk8s/tekton";
import { Vault } from "./cdk8s/vault";

const app = new App();
new ArgoCd(app, "argo-cd");
new ArgoImageUpdater(app, "argo-image-updater");
new ArgoNotifications(app, "argo-notifications");
new ArgoRollouts(app, "argo-rollouts");
new ArgoWorkflows(app, "argo-workflows");
// new CertManager(app, "cert-manager");
new ClusterAutoscaler(app, "cluster-autoscaler");
new Consul(app, "consul");
new CrossPlane(app, "crossplane");
new KubeStateMetrics(app, "kube-state-metrics");
new MetricsServer(app, "metrics-server");
new Prometheus(app, "prometheus");
new SecretStoreDriver(app, "secret-store-driver");
new Tekton(app, "tekton");
new Vault(app, "vault");

app.synth();
